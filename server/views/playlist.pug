extends layout

block content
    a.m-2.float-sm-right.btn.btn-primary(href='/playlists/' + playlist.id + '/export') Export
    a.m-2.float-sm-right.btn.btn-primary(href='/playlists/' + playlist.id + '/convert') Convert to MP3
    a.m-2.float-sm-right.btn.btn-primary(href='/playlists/' + playlist.id + '/upload') Upload to S3
    a.m-2.float-sm-right.btn.btn-primary(href='/playlists/' + playlist.id + '/refresh') Refresh playlist

    a(href='/playlists') < YT playlists

    h1= playlist.title
    p
        | Status:&nbsp;
        em= playlist.status
        | &nbsp;&nbsp;Video count:&nbsp;
        em= items.length

    h2 Album settings

    .row
        .col-sm-6
            form(method='post', encType='multipart/form-data', action='/playlists/' + playlist.id + '/metadata')
                .form-group.row
                    label.col-form-label.col-sm-2(for='album_' + playlist.id) Album title
                    .col-sm-10
                        input.form-control(type='text', id='album_' + playlist.id, name='album', value=playlist.album_name)
                .form-group.row
                    label.col-form-label.col-sm-2(for='album_cover_' + playlist.id) Album cover
                    .col-sm-10
                        input.form-control(type='file', id='album_cover_' + playlist.id, name='image_file')
                .form-group.row
                    label.col-form-label.col-sm-2(for='autoupdate_' + playlist.id) Autoupdate
                    .col-sm-10
                        input.form-control(type='checkbox', id='autoupdate_' + playlist.id, name='autoupdate', value='on' checked=playlist.autoupdate)
                .form-group.row
                    .col-sm-10
                        input.btn.btn-primary(type='submit', value='Save')
        .col-sm-6
            if playlist.coverImageUrl()
                img(src=playlist.coverImageUrl(), width=300)

    video-list(:videos="imports.videos", :playing-index="playingIndex", :play-track="(title, url, index) => playTrack(title, url, index)")


block bodyScripts
    - videosString = JSON.stringify(items.map(video => video.stringify()));
    script window.vueData = { videos: !{videosString} };

block footer
    footer.footer(v-if="playingVideo")
        .container-fluid
            audio-controller(:title="playingVideo.title", :url="videoUrl", :playing="playing" v-model:position="position" @update:duration="duration = $event" @update:playing="updatePlaying($event)" @playback:end="playbackEnded")
